@using BookBuddy.Business.Services.StartPageService
@using BookBuddy.Models.DataModels
@model StartPageViewModel
@inject StartPageService _startPageService

@{
    Layout = "~/Views/Shared/Layouts/StartPageLayout.cshtml";
    ViewData["Title"] = "Start";

    var currentPage = Model.CurrentPage;
    var books = _startPageService.GetBooksAsync(currentPage).Result;

}

@* <div class="container-sm startpage-wrapper">
    <div class="startpage-header">
        <h1 class="card-title">@Model.CurrentPage.Heading</h1>
    </div>

    <div class="startpage-mainbody">
        @Html.Raw(Model.CurrentPage.MainBody)
    </div>

    
    <component type="typeof(CounterBlazorPage)" render-mode="Server" />
    <component type="typeof(TestForm)" render-mode="Server" />
</div> *@
 



@if (Model.HeroSectionModel != null)
{
     <component type="typeof(HeroSection)" render-mode="ServerPrerendered"
               param-HeroSectionModel="Model.HeroSectionModel" />

}
else
{
    <p>HeroSectionModel is null</p>
}


@if (Model.InfoSectionModel != null)
{
    <component type="typeof(InfoSection)" render-mode="ServerPrerendered"
               param-InfoSectionModel="Model.InfoSectionModel" />

}
else
{
    <p>InfoSectionModel is null</p>
}

@if (Model.Books != null)
{
    <component type="typeof(Carousel)" render-mode="ServerPrerendered"
               param-books="Model.Books"
               param-SlideShowTitle="Model.SlideShowTitle"
               param-SlideShowContent="Model.SlideShowContent" />
}
else
{
    <p>Carousel is not available</p>
}

<script src="/js/carousel.js"></script>