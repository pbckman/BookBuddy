@code {
    [Parameter] [SupplyParameterFromQuery(Name = "query")] public string? Query { get; set; }
    [Parameter] public EventCallback<string> OnSearch { get; set; }

    private async Task HandleSearch()
    {
        await OnSearch.InvokeAsync(Query);
    }
    private void OnQueryChanged(ChangeEventArgs e)
    {
        Query = e.Value?.ToString();
    }
}

<div class="row mt-5">
    <div class="col-md-12">
        <form @onsubmit="HandleSearch" class="search-form d-flex">
            <div class="input-group search-box">
                <input class="form-control search-input" id="findQuery" name="query" type="search" placeholder="Search..." aria-label="Find" @bind="@Query" @oninput="OnQueryChanged" >
                <button class="input-group-text search-button" aria-label="Search">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </form>
    </div>
</div>


@* <form asp-controller="BooksPage" asp-action="SearchWithFilter" class="d-flex" id="findForm" method="get">
    <div class="input-group search-box">
        <input class="form-control search-input" id="findQuery" name="query" type="search" placeholder="@Html.Translate("/books/searchforbooks")" aria-label="Find" value="@Query">
        <button class="input-group-text search-button" aria-label="Search">
            <i class="fas fa-search"></i>
        </button>
    </div>
</form> *@
